pipeline {
    agent {
        dockerfile {
            filename 'docker/dockerfile-java'
            additionalBuildArgs '--build-arg JENKINS_USER_ID=`id -u jenkins` --build-arg JENKINS_GROUP_ID=`id -g jenkins`'
        }
    }

    environment {
        TESTSERVER_TOMCAT_ENDPOINT=credentials('testserver-tomcat8-url')
        TESTSERVER_TOMCAT_CREDENTIALS=credentials('testserver-tomcat8-credentials')

        READER2_DATABASE_CONFIG = credentials('bdp-core-test-reader2-database.properties')

        ROOT_PATH = "ninja"
    }

    stages {
        stage('Configure') {
            steps {
                sh 'sed -i -e "s/<\\/settings>$//g\" ~/.m2/settings.xml'
                sh 'echo "    <servers>" >> ~/.m2/settings.xml'
                sh 'echo "        ${TESTSERVER_TOMCAT_CREDENTIALS}" >> ~/.m2/settings.xml'
                sh 'echo "    </servers>" >> ~/.m2/settings.xml'
                sh 'echo "</settings>" >> ~/.m2/settings.xml'

                sh 'sed -i -e "s%\\(logging.level.root\\s*=\\).*\\$%\\1DEBUG,R%" ${ROOT_PATH}/src/main/resources/application.properties'

                sh 'cat "${READER2_DATABASE_CONFIG}" > ${ROOT_PATH}/src/main/resources/database.properties'
            }
        }
        stage('Test - Ninja API (v2)') {
            steps {
                sh 'cd ${ROOT_PATH} && mvn -B -U clean test'
            }
        }
        stage('Build - Ninja API (v2)') {
            steps {
                sh 'cd ${ROOT_PATH} && mvn -B -DskipTests package'
            }
        }
        stage('Deploy - Ninja API (v2)') {
            steps {
                sh 'cd ${ROOT_PATH} && mvn -B -DskipTests tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer'
            }
        }
    }
}
